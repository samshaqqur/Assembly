//
//  Created by Samuel Shaqqur on 11/6/18.
//  Copyright Â© 2018 Samual. All rights reserved.
//



#include<iostream>
#include<fstream>
#include<stdlib.h>
#include<string.h>
#include<ctype.h>

using namespace std;

int isKeyword(char buffer[]){
    char keywords[32][10] = {"Integer","Break","Case","Char","Const","Write","Default",
        "Do","Double","Else","Enum","Extern","Float","For","Goto",
        "If","Int","Long","Register","Return","Print","Signed",
        "Sizeof","Function","Struct","Switch","Typedef","Union",
        "Unsigned","Void","Volatile","While"};
    int i, flag = 0;

    for(i = 0; i < 32; ++i){
        if(strcmp(keywords[i], buffer) == 0){
            flag = 1;
            break;
        }
    }

    return flag;
}

int main(){

    cout<<"Group 9   Samual Shaqqur, Tino, Jeff, Eli"<<endl;
    cout<<"Lexeme    Token"<<endl;

    char ch, buffer[15], operators[] = "<>+-*/%=",  seperators[] = "{}();,";
    ifstream fin("APU_CS370_input.txt");
    int i,j=0;
    int counterf=0, counterc=0;

    if(!fin.is_open()){
        cout<<"error while opening the file\n";
        exit(0);
    }

    while(!fin.eof()){
        ch = fin.get();

        for(i = 0; i < 8; ++i){
            if(ch == operators[i])
                cout<<"<CompOperator> ::= == | > | < | >= | <= !=\n"<< "<CompOperator> ::=" <<operators[i] << "\n";

        }

        for(i = 0; i < 6; ++i){
            if(ch == seperators[i]){
                if(ch=='(' || ch==')'){
                    counterf++;
                }
                else if(ch=='{' || ch=='}'){
                    counterc++;
                }
            }
        }


        if(isalnum(ch)){ //Check if character is alphanumeric
            buffer[j++] = ch;
        }


        else if((ch == ' ' || ch == '\n' || ch==',' || ch=='+' || ch=='(' || ch==')') && (j != 0)){
            buffer[j] = '\0';
            j = 0;

            if (strcmp("void", buffer) == 0)
            {
                cout <<"<APU_CS370> ::= void main() { <statement> }\n";
            }


            if (strcmp("Integer", buffer) == 0)
            {
                cout <<"<Statement> ::= <Declaration>\n";
                cout <<"<Declaration> ::= Integer <Identifier> = <Integer>;\n";
            }

            if (strcmp("If", buffer) == 0)
            {
                cout <<"<Statement> ::= <If statement>\n";
                cout <<"<if Statement > ::= If( < Condition > ) { < Statement > }\n";
                cout<<"<Condition> ::= <Identifier> <CompOperator> <Identifier>\n";

            }

            if(isdigit(buffer[j+1])){
                cout<<"<Integer> ::= 0|...|9\n";
            }
            else{
                cout<<"<Identifier> ::=<Letter>\n";
                cout<<"<Letter> ::= a|...|Z\n";
            }

        }
    }

    fin.close();
    if(counterf % 2 != 0){
        cout << "*****************************************************\n" <<  "An error Is found: description below\n" << "Missing ')'\n";
    }
    if(counterc% 2 != 0){
        cout << "*****************************************************\n" <<  "An error Is found: description below\n" << "Missing '}'\n";
    }
    return 0;
}

